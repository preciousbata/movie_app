name: Flutter CI + CD

# This workflow is triggered on pushes to the repository.
on:
  # push: 
  #   branches: [ main ] # This will trigger the workflow on every push to the main branch
  # pull_request:
  #   branches: [ main ] # Add this trigger to run this workflow on PR's to the main branch
  workflow_dispatch: # to manually run this workflow

env:
  FLUTTER_CHANNEL: 'stable' # 'stable', 'beta', or 'master', default to: 'stable'
  FLUTTER_VERSION: '3.3.10'
  XCODE_VERSION: '14.2'
  PATH_TO_AAB: 'build/app/outputs/bundle/release/app-release.aab'
  ANDROID_PACKAGE_NAME: 'com.daniilshumko.woeios'
  PATH_TO_IPA: 'build/ios/ipa/flutter_github_actions_basics.ipa'

jobs:
  code-analysis-and-testing:
    if: false
    name: Code analysis and testing
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: ${{ env.FLUTTER_CHANNEL }}
        # flutter-version: ${{ env.FLUTTER_VERSION }} # you can also specify exact version of flutter

    - name: Get pub dependencies
      run: flutter pub get

    - name: Flutter analyze
      run: flutter analyze

    # - name: Flutter test
    #   run: flutter test


  # android:
  #   if: false
  #   name: Android CI/CD
  #   needs: code-analysis-and-testing
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 30
  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v3
    
  #   - name: Prepare key.jks & key.properties files
  #     env:
  #       KEYSTORE_FILE_BASE64: ${{ secrets.KEYSTORE_FILE_BASE64 }}
  #       KEY_PROPERTIES_FILE: ${{ secrets.KEY_PROPERTIES_FILE }}
  #     run: |
  #       echo "Convert key base64 string to a file"
  #       echo "$KEYSTORE_FILE_BASE64" >> key.jks.base64
  #       base64 --decode key.jks.base64 > key.jks

  #       echo "Convert key.properties secret string to a file"
  #       echo "$KEY_PROPERTIES_FILE" >> key.properties
  #     working-directory: 'android/'
     
  #   - name: Set up Flutter
  #     uses: subosito/flutter-action@v2
  #     with:
  #       channel: ${{ env.FLUTTER_CHANNEL }}
  #       # flutter-version: ${{ env.FLUTTER_VERSION }} # you can also specify exact version of flutter
    
  #   - name: Flutter doctor
  #     run: flutter doctor # this is an optional step and can be removed
    
  #   - name: Build AAB
  #     run: |
  #       flutter build appbundle --release

  #       echo "Removing signing files for extra security"
  #       rm android/key.*
    
  #   - name: Upload AAB artifact
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: release-aab
  #       path: ${{ env.PATH_TO_AAB }}

  #   - name: Upload to Play Store
  #     run: |
  #       fastlane supply --aab ${{ env.PATH_TO_AAB }} --json_key_data '${{ secrets.ANDROID_SERVICE_ACCOUNT_JSON }}' --package_name '${{ env.ANDROID_PACKAGE_NAME }}' --track 'internal'
